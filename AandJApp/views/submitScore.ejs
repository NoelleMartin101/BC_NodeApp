<%- include partials/header.ejs %>
    <br />
    <style>
        .mainTable {
            width: 900px;
            height: 600px;
            margin-left: auto;
            margin-right: auto;
            color: #26466D;
            background-color: #FFF;
            /*#ECC3BF;*/
        }
    </style>
    <form id="mainForm">
        <div class="container"><button class="btn btn-default" type="button"><a href="/athleteProfile">Back</a></button><br /><br />

            <p id="userAreaWallet">Status: Not connected to Metamask</p>
            <button class="btn btn-success logInBtn" type="button" onclick="connectMetamaskSub()">Connect to Wallet
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a></button><br /><br />
            <p id="userAreaContract">Status: Not connected to Contract</p>
            <div id="userAreaContractbtn" width="100%">
                <button class="btn btn-success" type="button" onclick="connectContract()"><i
                        class="fa fa-tasks"></i>&nbsp;&nbsp;&nbsp;Connect to Contract
                    </a></button>
            </div>
            <br /><br /><br />
            Submit your score for the latest WOD <br />
            <input type="number" name="score" />
            <div id="readAreaSubmit" width="100%">
                <button class="btn btn-success" type="button" onclick="submitScore()"><i
                        class="fa fa-tasks"></i>&nbsp;&nbsp;&nbsp;Submit Open Scores
                    </a></button>
            </div>
        </div>
    </form>
    <script>
        // function getVal() {
        //     //alert("We're in!!!!");
        //     var myScore = $(`score`).val();                
        //         alert(myScore.val());
        //     };

        let account;
        const connectMetamaskSub = async () => {
            if (window.ethereum !== "underfined") {
                const accounts = await ethereum.request({ method: "eth_requestAccounts" });
                account = accounts[0];
                document.getElementById("userAreaWallet").innerHTML = `User Account: ${account}`;
            }
        }
        const connectContract = async () => {
            const ABI = [
                {
                    "constant": false,
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "score",
                            "type": "uint256"
                        }
                    ],
                    "name": "postScore",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "payable": false,
                    "stateMutability": "nonpayable",
                    "type": "function"
                },
                {
                    "constant": true,
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "name": "athletes",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "payable": false,
                    "stateMutability": "view",
                    "type": "function"
                }
            ];
            const Address = "0xbCA22768F1C0d533DC81435c53B458A64F714b1E";
            window.web3 = await new Web3(window.ethereum);
            window.contract = await new window.web3.eth.Contract(ABI, Address);
            document.getElementById("userAreaContract").innerHTML = "Connection Status: Success";
        }
        const submitScore = async () => {
            //const myScore = document.getElementById("score").innerHTML;
            const myScore = $(`score`).val();              
            //const myScore = document.getElementById("score").value;
            await window.contract.methods.postScore(myScore).send({from:account});            
            document.getElementById("userAreaWallet").innerHTML = `Posted score of: ${myScore} Congratulations!!!`;
        }
    </script>
    <%- include partials/footer.ejs %>